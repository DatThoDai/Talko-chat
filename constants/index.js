// C·∫•u h√¨nh API URL v√† c√°c h·∫±ng s·ªë kh√°c

export const REACT_APP_API_URL = 'http://192.168.101.14:3001';
export const REACT_APP_SOCKET_URL = 'http://192.168.101.14:3001';

// C·∫§U H√åNH ƒê√öNG THEO BACKEND CNM_CHAT (FIXED)
// ƒê√£ ph√¢n t√≠ch code CNM_Chat/routes/index.js
export const API_ENDPOINTS = {
  // Conversation routes: CNM_Chat/routes/index.js c√≥ d√≤ng:
  // app.use('/conversations', auth, conversationRouter)
  CONVERSATIONS: '/conversations',
  CREATE_CONVERSATION: '/conversations',
  ADD_MEMBER: '/conversations/members',
  LEAVE_CONVERSATION: '/conversations/leave',
  UPDATE_CONVERSATION: '/conversations',
  
  // Message routes: CNM_Chat/routes/index.js c√≥ d√≤ng:
  // app.use('/messages', auth, messageRouter)
  MESSAGES: '/messages',
  CREATE_MESSAGE: '/messages/text',
  PIN_MESSAGE: '/messages/pin',
  DELETE_MESSAGE: '/messages',
  REACT_MESSAGE: '/messages/reacts',
  
  // Auth endpoints kh√¥ng c·∫ßn /me/ prefix (ho·∫°t ƒë·ªông OK)
  AUTH: '/auth',
  LOGIN: '/auth/login',
  REGISTER: '/auth/register',
  LOGOUT: '/auth/logout',
  
  // Users endpoints c≈©ng c·∫ßn /me/ prefix
  USERS: '/me/users',
  USERS_SEARCH: '/me/search',  // ƒê√£ x√°c nh·∫≠n ho·∫°t ƒë·ªông trong logs
  USER_PROFILE: '/me/profile',  // ƒê√£ x√°c nh·∫≠n ho·∫°t ƒë·ªông trong logs
  
  // Friends endpoints c≈©ng c·∫ßn /me/ prefix
  FRIENDS: '/me/friends',
  FRIEND_REQUESTS: '/me/friends/requests',
  ADD_FRIEND: '/me/friends/add',
  ACCEPT_FRIEND: '/me/friends/accept',
  
  // Classify endpoints (c√≥ th·ªÉ trong /common/ ho·∫∑c /me/)
  CLASSIFIES: '/common/classifies',
  
  // C√°c endpoint kh√°c
  MEMBERS: '/me/members',
  
  // Gi·ªØ l·∫°i c√°c endpoint ƒë√£ x√°c nh·∫≠n ho·∫°t ƒë·ªông trong logs
  ME_PROFILE: '/me/profile',
  ME_SEARCH: '/me/search',
  
  // C√°c alias ƒë·ªÉ h·ªó tr·ª£ c·∫£ hai ki·ªÉu API
  CHAT_MESSAGES: '/me/messages',
  PROFILE: '/me/profile',
};

// Log endpoints ƒë·ªÉ debug
console.log('Using CONVERSATIONS endpoint:', API_ENDPOINTS.CONVERSATIONS);

// Log c·∫•u h√¨nh API URL v√† Socket URL ƒë·ªÉ debug
console.log('Config - API URL:', REACT_APP_API_URL);
console.log('Config - Socket URL:', REACT_APP_SOCKET_URL);

// C√°c tham s·ªë m·∫∑c ƒë·ªãnh
export const DEFAULT_MESSAGE_PARAMS = {
  page: 0,
  size: 20,
};

// Emoji reactions
export const REACTIONS = ['üëç', '‚ô•Ô∏è', 'üòÑ', 'üò≤', 'üò≠', 'üò°'];

// H√¨nh ·∫£nh m·∫∑c ƒë·ªãnh
export const DEFAULT_AVATAR = 'https://via.placeholder.com/150';
export const DEFAULT_COVER_IMAGE = 'https://via.placeholder.com/500x200';
export const NO_INTERNET_IMAGE = 'https://via.placeholder.com/400x300?text=No+Internet';
export const EMPTY_IMAGE = 'https://via.placeholder.com/400x300?text=Empty';

// Th√¥ng b√°o
export const ERROR_MESSAGE = 'ƒê√£ c√≥ l·ªói x·∫£y ra';
export const LEAVE_GROUP_MESSAGE = 'B·∫°n c√≥ mu·ªën r·ªùi nh√≥m kh√¥ng?';
export const DELETE_GROUP_MESSAGE = 'To√†n b·ªô n·ªôi dung cu·ªôc tr√≤ chuy·ªán s·∫Ω b·ªã x√≥a, b·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?';

// C√°c lo·∫°i tin nh·∫Øn
export const messageType = {
  ALL: 'ALL',
  TEXT: 'TEXT',
  HTML: 'HTML',
  NOTIFY: 'NOTIFY',
  IMAGE: 'IMAGE',
  VIDEO: 'VIDEO',
  FILE: 'FILE',
  VOICE: 'VOICE',
  STICKER: 'STICKER',
};

// Tr·∫°ng th√°i tin nh·∫Øn
export const MESSAGE_STATUS = {
  DELETED: 'DELETED',
  SENT: 'SENT',
  RECEIVED: 'RECEIVED',
  SEEN: 'SEEN',
  RECALLED: 'RECALLED'
};

// H·∫±ng s·ªë li√™n quan ƒë·∫øn thu h·ªìi tin nh·∫Øn
export const MESSAGE_RECALL_TEXT = 'Tin nh·∫Øn ƒë√£ b·ªã thu h·ªìi';
export const MESSAGE_RECALL_TIMEOUT = 600000; // 10 ph√∫t (600,000 ms)

// C√°c lo·∫°i m·ªëi quan h·ªá b·∫°n b√®
export const friendType = {
  FRIEND: 'FRIEND',
  FOLLOWER: 'FOLLOWER',
  YOU_FOLLOW: 'YOU_FOLLOW',
  NOT_FRIEND: 'NOT_FRIEND',
  DONT_HAVE_ACCOUNT: 'DONT_HAVE_ACCOUNT',
  ADD_TO_GROUP: 'ADD_TO_GROUP',
  REMOVE_FROM_GROUP: 'REMOVE_FROM_GROUP',
};

// C√°c lo·∫°i th√†nh vi√™n trong nh√≥m
export const memberType = {
  LEADER: 'LEADER',
  DEPUTY_LEADER: 'DEPUTY_LEADER',
  MEMBER: 'MEMBER',
};

// C·∫•u h√¨nh m·∫∑c ƒë·ªãnh cho c√°c modal
export const DEFAULT_MESSAGE_MODAL_VISIBLE = {
  isVisible: false,
  isRecall: false,
  isMyMessage: false,
  messageId: '',
  messageContent: '',
  type: messageType.TEXT,
};

export const DEFAULT_REPLY_MESSAGE = {
  isReply: false,
  replyMessage: {},
};

export const DEFAULT_MEMBER_MODAL = {
  isVisible: false,
  memberRole: memberType.MEMBER,
  memberId: '',
  memberName: '',
};
